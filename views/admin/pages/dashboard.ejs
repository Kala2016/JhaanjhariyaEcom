<%- include('../partials/header.ejs')%>    


    <!-- <style>
    .fa-list-alt ,.fa-gift,.fa-tag,.fa-image{
        color: #adb5bd;
    }
    .text{
        color: black;
        font-weight: 400;
    }
    .menu-item{
    text-decoration: none;
    }
    a {
    /* Your CSS styles here */
    text-decoration: none !important;

    }
    .logo-img{
        max-width: 100px;
        max-height: 100px;
    }

        .custom-icon {
            font-size: 24px;
        }
    </style> -->



<section class="content-main">
    <div class="content-header">
        <div>
            <h2 class="content-title card-title">Dashboard </h2>
            <p>Whole data about your business here</p>
        </div>
        <div>
            <a href="/admin/dashboard/sales-report" class="btn btn-primary"><i class="text-muted material-icons md-post_add"></i>Create report</a>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-3">
            <div class="card card-body mb-4">
                <article class="icontext">
                    <span class="icon icon-sm rounded-circle bg-primary-light">
                        <i class="text-primary material-icons custom-icon mb-3">₹</i>
                    </span>
                    <div class="text">
                        <h6 class="mb-1 card-title">Revenue</h6>
                        <span>₹<%= (totalRevenue).toLocaleString() %></span>
                        <span class="text-sm">
                            Processing fees are not included.
                        </span>
                    </div>
                </article>
            </div>
        </div> 
        <div class="col-lg-3">
            <div class="card card-body mb-4">
                <article class="icontext">
                    <span class="icon icon-sm rounded-circle bg-success-light"><i
                            class="text-success material-icons md-local_shipping mb-2"></i></span>
                    <div class="text">
                        <h6 class="mb-1 card-title">Orders</h6> <span>
                            <%= orders %>
                        </span>
                        <span class="text-sm">
                            Excluding orders in transit
                        </span>
                    </div>
                </article>
            </div>
        </div>
        <div class="col-lg-3">
            <div class="card card-body mb-4">
                <article class="icontext">
                    <span class="icon icon-sm rounded-circle bg-warning-light"><i
                            class="text-warning material-icons md-qr_code mb-2"></i></span>
                    <div class="text">
                        <h6 class="mb-1 card-title">Products</h6> <span>
                            <%= products %>
                        </span>
                        <span class="text-sm">
                            In <%= category %> Categories
                        </span>
                    </div>
                </article>
            </div>
        </div>
        <div class="col-lg-3">
            <div class="card card-body mb-4">
                <article class="icontext">
                    <span class="icon icon-sm rounded-circle bg-info-light"><i
                            class="text-info material-icons md-shopping_basket mb-2"></i></span>
                    <div class="text">
                        <h6 class="mb-1 card-title">Monthly Revenue</h6> <span>₹ <%=
                                (monthlyRevenue).toLocaleString() %></span>
                    </div>
                </article>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-xl-8 col-lg-12">
            <div class="card mb-4">
                <article class="card-body">
                    <h5 class="card-title">Sale Statistics</h5>
                    <canvas id="myChart" height="120px"></canvas>
                </article>
            </div>
        </div>
        <div class="col-lg-4"> <!-- Adjust the size according to your needs -->
            <div class="card mb-4">
                <article class="card-body">
                    <h5 class="card-title">New Members</h5>
                    <hr>
                    <div class="new-member-list">
                        <% if (newUsers.length> 0) { %>
                            <% newUsers.forEach(user=> { %>
                                <div class="d-flex align-items-center justify-content-between mb-4">
                                    <div class="d-flex align-items-center">
                                        <div>
                                            <h6>
                                                <%= user.fname %>
                                            </h6>
                                            <p class="text-muted font-xs my-0">
                                                <%= user.email %>
                                            </p>
                                        </div>
                                    </div>
                                </div>
                                <% }) %>
                                    <% } %>
                    </div>
                </article>
            </div>
        </div>
    </div>

    <div class="card mb-4">
        <header class="card-header">
            <h4 class="card-title">Latest orders</h4>
            
                   
        </header>
        <!-- Modal -->
    <div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog"
    aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Export Options</h5>
            </div>
            <div class="modal-body d-flex justify-content-around">
                <div>
                    <a href="" id="downloadCSV" class="btn btn-primary"></i>Export as Excel</a>
                </div>
                <div>
                    <a href="" id="downloadPDF" class="btn btn-primary"></i>Export as PDF</a>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary col-md-3" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
        <div class="card-body">
            <div class="table-responsive">
                <div class="table-responsive">
                    <table class="table align-middle table-nowrap mb-0">
                        <thead class="table-light">
                            
                            <tr>
                                <th class="align-middle" scope="col">Order ID</th>
                                <th class="align-middle" scope="col">Billing Name</th>
                                <th class="align-middle" scope="col">Date</th>
                                <th class="align-middle" scope="col">Total</th>
                                <th class="align-middle" scope="col">Payment Status</th>
                                <th class="align-middle" scope="col">Payment Method</th>
                                <th class="align-middle" scope="col">View Details</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (latestOrders.length> 0) { %>
                                <% latestOrders.forEach(element=> { %>
                                    <tr>
                                        <td><a href="#" class="fw-bold">
                                                <%= element.orderId %>
                                            </a> </td>
                                        <td>
                                            <%= element.address.address_name %>
                                        </td>
                                        <td>
                                            <%= (element.orderDate).toLocaleDateString('en-IN', { year: 'numeric' ,
                                                month: 'long' , day: 'numeric' ,hour:'numeric',minute:'numeric' }) %>
                                        </td>
                                        <td>
                                            <%= element.total %>
                                        </td>
                                        <td>
                                            <span class="badge badge-pill badge-soft-<%= element.paymentStatus === 'Paid'?'success':
                                            (element.paymentStatus === 'Pending' ? 'warning' : '') %>">
                                                <%= element.paymentStatus %>
                                            </span>
                                        </td>
                                        <td>
                                            <%= element.paymentMethod %>
                                        </td> 
                                        <td>
                                            <a href="/admin/editOrder/<%= element._id %>" class="btn btn-xs">
                                                View details</a>    
                                        </td>
                                    </tr>
                                    <% }) %>
                                        <% } else { %>
                                            <h4>No Orderse Yet</h4>
                                            <% } %>
                        </tbody>
                    </table>
                    <input type="hidden" id="salesData" value="<%= JSON.stringify(salesData) %>">
                    <input type="hidden" id="usersData" value="<%= JSON.stringify(usersData) %>">
                    <input type="hidden" id="productSold" value="<%= JSON.stringify(productSold) %>">
                </div>
            </div> <!-- table-responsive end// -->
        </div>
    </div>
</section> <!-- content-main end// -->
<script src="/adminassets/libs/apexcharts/dist/apexcharts.min.js"></script>
<script src="/assets/js/users/custom-chart.js" type="text/javascript"></script>

<script>
    // click event for download excel
    document.getElementById('downloadCSV').addEventListener('click', (e) => {
        e.preventDefault()
        downloadCSV()
    })
    document.getElementById('downloadPDF').addEventListener('click', (e) => {
        e.preventDefault()
        downloadPDF()
    })
    // Generating sales Report
    document.querySelector('form').addEventListener('submit', async (e) => {
        e.preventDefault();

        const fromDate = document.getElementById('fromDate').value;
        const toDate = document.getElementById('toDate').value;
        // Retrieve user input

        // Make an AJAX request to retrieve sales report data
        try {
            const response = await fetch('/admin/dashboard/sales-report', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ fromDate, toDate }),
            });

            if (!response.ok) {
                throw new Error('Failed to fetch data');
            }
            const responseData = await response.json();
            const data = responseData.matchedOrders;
            const salesTotal = responseData.salesTotal;
            if (!data.length) {
                alert('No data in the dates')
                return
            }
            // Call a function to create and populate the table
            createTable(data, salesTotal);
        } catch (error) {
            console.error('Error:', error);
        }
    });

    function createTable(data, salesTotal) {
        const tableContainer = document.getElementById('table-container');

        // Clear any existing table content
        tableContainer.innerHTML = '';

        // Create a table element and set its class for styling
        const table = document.createElement('table');
        table.className = 'responsive-table';

        // Create table header
        const tableHeader = document.createElement('thead');
        const headerRow = document.createElement('tr');
        headerRow.innerHTML = `
    <th>Order ID</th>
    <th>Order Date</th>
    <th>Customer</th>
    <th>Payment Method</th>
    <th>Payment Status</th>
    <th>Total</th>
`;
        tableHeader.appendChild(headerRow);
        table.appendChild(tableHeader);

        // Create table body and populate with data
        const tableBody = document.createElement('tbody');
        data.forEach(order => {
            const row = document.createElement('tr');
            row.innerHTML = `
        <td>${order.orderId}</td>
        <td>${new Date(order.orderDate).toDateString()}</td>
        <td>${order.fname}</td>
        <td>${order.paymentMethod}</td>
        <td>${order.paymentStatus}</td>
        <td>₹${order.total}</td> 
    `;
            tableBody.appendChild(row);
        });

        table.appendChild(tableBody);
        tableContainer.appendChild(table);

        const totalRow = document.createElement('tr');
        totalRow.innerHTML = `
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td></td>
    <td>₹${salesTotal}</td>
`;
        tableBody.appendChild(totalRow);
    }

    // dowload as excelsheet
    function downloadCSV() {
        const tableContainer = document.getElementById('table-container');

        // Find the table element within the container
        const table = tableContainer.querySelector('table');

        if (!table) {
            alert('No data to download.');
            return;
        }

        // Create a CSV content string
        let csvContent = "\uFEFFOrder ID,Order Date,Customer,Payment Method,Payment Status,Total\n";

        // Iterate through the rows of the table to extract data
        let rows = table.querySelectorAll('tbody tr');
        rows.forEach(row => {
            const columns = row.querySelectorAll('td');
            if (columns.length === 6) {
                csvContent += `${columns[0].textContent},${columns[1].textContent},${columns[2].textContent},${columns[3].textContent},${columns[4].textContent},${columns[5].textContent}\n`;
            }
        });

        // Create a Blob containing the CSV data
        const blob = new Blob([csvContent], { type: 'text/csv' });

        // Create a temporary URL for the Blob
        const url = URL.createObjectURL(blob);
        const fromDate = document.getElementById('fromDate').value;
        const toDate = document.getElementById('toDate').value;
        // Create an anchor element for downloading the CSV file
        const a = document.createElement('a');
        a.href = url;
        a.download = `sales_report-${fromDate}-${toDate}.csv`;

        // Trigger a click event to start the download
        a.click();

        // Clean up by revoking the temporary URL
        URL.revokeObjectURL(url);
    }

    function downloadPDF() {
        const tableContainer = document.getElementById('table-container');
        const table = tableContainer.querySelector('table');

        if (!table) {
            alert('No data to download.');
            return;
        }

        const data = [];
        const header = [];
        const body = [];

        // Extract header cells
        table.querySelectorAll('thead th').forEach(cell => {
            header.push({ text: cell.textContent, style: 'tableHeader' });
        });

        // Extract table data
        table.querySelectorAll('tbody tr').forEach(row => {
            const rowData = [];
            row.querySelectorAll('td').forEach(cell => {
                rowData.push({ text: cell.textContent, style: 'tableCell' });
            });
            body.push(rowData);
        });

        data.push(header, ...body);

        const docDefinition = {
            content: [
                { text: 'Sales Report', style: 'header' },
                {
                    table: {
                        widths: 'auto',
                        body: data,
                    },
                    layout: {
                        fillColor: function (rowIndex, node, columnIndex) {
                            return rowIndex === 0 ? '#337ab7' : null;
                        },
                    },
                },
            ],
            styles: {
                header: {
                    fontSize: 16,
                    bold: true,
                    alignment: 'center',
                    margin: [0, 0, 0, 10],
                },
                tableHeader: {
                    fillColor: '#337ab7',
                    color: '#ffffff',
                    alignment: 'center',
                    bold: true,
                },
                tableCell: {
                    alignment: 'center',
                },
            },
        };
        const fromDate = document.getElementById("fromDate").value;
        const toDate = document.getElementById("toDate").value;
        pdfMake.createPdf(docDefinition).download(`sales-report-${fromDate}--${toDate}.pdf`);
    }

</script>

<style>
    /* styles.css */
    body {
        font-family: Arial, sans-serif;
        background-color: #f0f0f0;
        margin: 0;
        padding: 0;
    }

    .fa-list-alt,
    .fa-gift,
    .fa-tag,
    .fa-image {
        color: #adb5bd;
    }

    .text {
        color: black;
        font-weight: 400;
    }

    .menu-item {
        text-decoration: none;
    }

    a {
        /* Your CSS styles here */
        text-decoration: none !important;

    }

    .logo-img {
        max-width: 100px;
        max-height: 100px;
    }

    .report-form-container {
        max-width: 500px;
        margin: 0 auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    h1 {
        text-align: center;
    }

    .form-group {
        margin-bottom: 20px;
    }

    label {
        display: block;
        font-weight: bold;
    }

    input,
    button {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
        font-size: 16px;
        /* Increase font size for better readability */
    }

    button {
        background-color: #007bff;
        color: #fff;
        border: none;
        cursor: pointer;
    }

    button:hover {
        background-color: #0056b3;
    }

    /* Add styles for the table */
    table.responsive-table {
        width: 100%;
        border-collapse: collapse;
        background-color: #fff;
        border: 1px solid #ddd;
    }

    table.responsive-table th,
    table.responsive-table td {
        padding: 10px;
        border: 1px solid #ddd;
        text-align: center;
    }

    table.responsive-table th {
        background-color: #007bff;
        color: #fff;
        font-weight: bold;
    }

    table.responsive-table td {
        background-color: #f9f9f9;
    }

    table.responsive-table tr:nth-child(even) {
        background-color: #f2f2f2;
        margin-bottom: 10px;
    }

    table.responsive-table tr:hover {
        background-color: #ccc;
        cursor: pointer;
    }

    /* Add some spacing to the table container */
    #table-container {
        margin-top: 15px;
        margin-bottom: 20px;

    }
</style>
